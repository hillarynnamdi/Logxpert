<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAH//Z
</value>
  </data>
</root>